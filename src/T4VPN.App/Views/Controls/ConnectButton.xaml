<!--
Copyright (c) 2020 Time4VPS

This file is part of T4VPN.

T4VPN is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

T4VPN is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with T4VPN.  If not, see <https://www.gnu.org/licenses/>.
-->

<UserControl x:Class="T4VPN.Views.Controls.ConnectButton"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:resources="clr-namespace:T4VPN.Resources"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <Style x:Key="ConnectButton" TargetType="Button" BasedOn="{StaticResource ClearStyleButton}">
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontWeight" Value="Light"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style x:Key="ConnectButtonOutterBorder" TargetType="Border">
            <Setter Property="Margin" Value="0"/>
            <Setter Property="CornerRadius" Value="13"/>
            <Setter Property="BorderBrush" Value="#4B4B56"/>
            <Setter Property="BorderThickness" Value="3"/>
        </Style>
        <Style x:Key="ConnectButtonInnerBorder" TargetType="Border">
            <Setter Property="CornerRadius" Value="13"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="{StaticResource SidebarTabBackgroundColor}"/>
            <Setter Property="Margin" Value="-1"/>
        </Style>

        <ControlTemplate x:Key="ServerConnectButtonControlTemplate" TargetType="Button">
            <Border x:Name="ConnectButtonOutterBorder" Style="{StaticResource ConnectButtonOutterBorder}">
                <Border x:Name="ConnectButtonInnerBorder" Style="{StaticResource ConnectButtonInnerBorder}">
                    <Button Name="Button"
                        Style="{StaticResource ConnectButton}"
                        Padding="{TemplateBinding Padding}"
                        Command="{TemplateBinding Command}"
                        Height="{TemplateBinding Height}"
                        CommandParameter="{TemplateBinding CommandParameter}"/>
                </Border>
            </Border>
            <ControlTemplate.Triggers>
                <DataTrigger Binding="{Binding Connected}" Value="True">
                    <Setter TargetName="Button" Property="Content" Value="{resources:Loc Servers_btn_Disconnect}"/>
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Connected}" Value="False">
                    <Setter TargetName="Button" Property="Content" Value="{resources:Loc Servers_btn_Connect}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding UpgradeRequired}" Value="True">
                    <Setter TargetName="Button" Property="Content" Value="{resources:Loc Servers_btn_Upgrade}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Border}}, Path=IsMouseOver}" Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
                <Trigger Property="Button.IsMouseOver" Value="True">
                    <Setter TargetName="ConnectButtonOutterBorder" Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
                    <Setter TargetName="ConnectButtonInnerBorder" Property="Background" Value="{StaticResource PrimaryColor}"/>
                </Trigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Connected}" Value="True"/>
                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="ConnectButtonOutterBorder" Property="BorderBrush" Value="Red"/>
                    <Setter TargetName="ConnectButtonInnerBorder" Property="Background" Value="Red"/>
                    <Setter TargetName="Button" Property="Foreground" Value="White"/>
                    <Setter TargetName="Button" Property="Content" Value="{resources:Loc Servers_btn_Disconnect}"/>
                </MultiDataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="SidebarConnectButton" TargetType="Button" BasedOn="{StaticResource ClearStyleButton}">
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Visibility" Value="Collapsed"/>
            <Setter Property="Padding" Value="9,0,9,1"/>
            <Setter Property="Height" Value="26"/>
            <Setter Property="Template" Value="{StaticResource ServerConnectButtonControlTemplate}"/>
        </Style>
        <Style x:Key="SidebarCountryConnectButton" BasedOn="{StaticResource SidebarConnectButton}" TargetType="Button">
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Expanded}" Value="True"/>
                        <Condition Binding="{Binding Connected}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Visibility" Value="Visible"/>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="SidebarServerConnectButton" TargetType="Button" BasedOn="{StaticResource SidebarConnectButton}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Server.Status}" Value="0">
                    <Setter Property="Visibility" Value="Hidden"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

    </UserControl.Resources>

    <Button Style="{StaticResource SidebarServerConnectButton}"
            Name="Button"
            CommandParameter="{Binding}"/>
</UserControl>
