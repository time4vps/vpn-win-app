<!--
Copyright (c) 2020 Time4VPS

This file is part of T4VPN.

T4VPN is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

T4VPN is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with T4VPN.  If not, see <https://www.gnu.org/licenses/>.
-->

<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fa="http://schemas.fontawesome.io/icons/"
                    xmlns:sidebar="clr-namespace:T4VPN.Sidebar"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:resources="clr-namespace:T4VPN.Resources"
                    mc:Ignorable="d">

    <Style x:Key="ButtonGrid" TargetType="Grid">
        <Setter Property="Margin" Value="300,0,0,0"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Border}, Path=IsMouseOver}" Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin">
                                <SplineThicknessKeyFrame KeyTime="0:0:0" Value="300,0,0,0"/>
                                <SplineThicknessKeyFrame KeyTime="0:0:0.3" Value="0"/>
                            </ThicknessAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin">
                                <SplineThicknessKeyFrame KeyTime="0:0:0" Value="0"/>
                                <SplineThicknessKeyFrame KeyTime="0:0:0.3" Value="300,0,0,0"/>
                            </ThicknessAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ConnectButtonGradient" TargetType="Border">
        <Setter Property="Height" Value="26"/>
        <Setter Property="Background" Value="{StaticResource SidebarTabBackgroundColor}"/>
        <Setter Property="CornerRadius" Value="0,13,13,0"/>
    </Style>

    <LinearGradientBrush x:Key="ConnectButtonOpacityMask" StartPoint="1,0" EndPoint="0,0">
        <GradientStop Color="#FFFFFFFF" Offset="0"/>
        <GradientStop Color="#FFFFFFFF" Offset="0.85"/>
        <GradientStop Color="#00FFFFFF" Offset="1"/>
    </LinearGradientBrush>

    <Style x:Key="ConnectButton" TargetType="Button" BasedOn="{StaticResource ClearStyleButton}">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Light"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <Style x:Key="ConnectButtonOutterBorder" TargetType="Border">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="CornerRadius" Value="13"/>
        <Setter Property="BorderBrush" Value="#4B4B56"/>
        <Setter Property="BorderThickness" Value="3"/>
    </Style>
    <Style x:Key="ConnectButtonInnerBorder" TargetType="Border">
        <Setter Property="CornerRadius" Value="13"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{StaticResource SidebarTabBackgroundColor}"/>
        <Setter Property="Margin" Value="-1"/>
    </Style>

    <ControlTemplate x:Key="ServerConnectButtonControlTemplate" TargetType="Button">
        <Border x:Name="ConnectButtonOutterBorder" Style="{StaticResource ConnectButtonOutterBorder}">
            <Border x:Name="ConnectButtonInnerBorder" Style="{StaticResource ConnectButtonInnerBorder}">
                <Button Name="Button"
                        Style="{StaticResource ConnectButton}"
                        Padding="{TemplateBinding Padding}"
                        Command="{TemplateBinding Command}"
                        Height="{TemplateBinding Height}"
                        CommandParameter="{TemplateBinding CommandParameter}"/>
            </Border>
        </Border>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Connected}" Value="True">
                <Setter TargetName="Button" Property="Content" Value="{resources:Loc Servers_btn_Disconnect}"/>
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Connected}" Value="False">
                <Setter TargetName="Button" Property="Content" Value="{resources:Loc Servers_btn_Connect}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding UpgradeRequired}" Value="True">
                <Setter TargetName="Button" Property="Content" Value="{resources:Loc Servers_btn_Upgrade}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Border}}, Path=IsMouseOver}" Value="True">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <Trigger Property="Button.IsMouseOver" Value="True">
                <Setter TargetName="ConnectButtonOutterBorder" Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
                <Setter TargetName="ConnectButtonInnerBorder" Property="Background" Value="{StaticResource PrimaryColor}"/>
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Connected}" Value="True"/>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="ConnectButtonOutterBorder" Property="BorderBrush" Value="Red"/>
                <Setter TargetName="ConnectButtonInnerBorder" Property="Background" Value="Red"/>
                <Setter TargetName="Button" Property="Foreground" Value="White"/>
                <Setter TargetName="Button" Property="Content" Value="{resources:Loc Servers_btn_Disconnect}"/>
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="SidebarConnectButton" TargetType="Button" BasedOn="{StaticResource ClearStyleButton}">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Visibility" Value="Collapsed"/>
        <Setter Property="Padding" Value="9,0,9,1"/>
        <Setter Property="Height" Value="26"/>
        <Setter Property="Template" Value="{StaticResource ServerConnectButtonControlTemplate}"/>
    </Style>
    <Style x:Key="SidebarServerConnectButton" TargetType="Button" BasedOn="{StaticResource SidebarConnectButton}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Server.Status}" Value="0">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="SidebarCountryConnectButton" BasedOn="{StaticResource SidebarConnectButton}" TargetType="Button">
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Expanded}" Value="True"/>
                    <Condition Binding="{Binding Connected}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Visibility" Value="Collapsed"/>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="CreateProfileButton" TargetType="Button" BasedOn="{StaticResource ClearStyleButton}">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Border.CornerRadius" Value="20"/>
        <Setter Property="Width" Value="150"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Content" Value="{resources:Loc Sidebar_Profiles_btn_Create}"/>
        <Setter Property="Margin" Value="0,20,0,0"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Border.BorderBrush" Value="White"/>
        <Setter Property="Command" Value="{Binding CreateProfileCommand}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="Border.BorderBrush" Value="Transparent"/>
                <Setter Property="Background" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ManageProfilesButton" TargetType="Button" BasedOn="{StaticResource ClearStyleButton}">
        <Setter Property="Foreground" Value="{StaticResource PrimaryColor}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Margin" Value="0,10,0,20"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Command" Value="{Binding ManageProfilesCommand}"/>
    </Style>
    <Style x:Key="MapSidebarModeButton" TargetType="Button" BasedOn="{StaticResource ClearStyleButton}">
        <Setter Property="Panel.ZIndex" Value="2"/>
        <Setter Property="Margin" Value="0,20,0,0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="AutomationProperties.AutomationId" Value="{StaticResource SidebarModeButtonId}"/>
        <Setter Property="Command" Value="{Binding ToggleSidebarModeCommand}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Path Fill="#2b2c34" Width="28" Height="26" Data="M-0.000,-0.000 L15.000,-0.000 C22.180,-0.000 28.000,5.820 28.000,13.000 C28.000,20.180 22.180,26.000 15.000,26.000 L-0.000,26.000 L-0.000,-0.000 Z"/>
                        <fa:FontAwesome Icon="AngleLeft" HorizontalAlignment="Center" Padding="0,0,5,0" VerticalAlignment="Center" FontSize="16" Foreground="#76798b"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding SidebarMode}" Value="True">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="SidebarModeButton" TargetType="Button" BasedOn="{StaticResource MapSidebarModeButton}">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="AutomationProperties.AutomationId" Value="{StaticResource MapModeButton}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding SidebarMode}" Value="False">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding SidebarMode}" Value="True">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="SidebarTabButton" TargetType="Button" BasedOn="{StaticResource ClearStyleButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="49"/>
        <Setter Property="Width" Value="185"/>
        <Setter Property="Panel.ZIndex" Value="0"/>
    </Style>
    <Style x:Key="CountriesTabButton" TargetType="Button" BasedOn="{StaticResource SidebarTabButton}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Path Name="Path" Fill="#24242b" HorizontalAlignment="Right" Data="M-0.000,-0.000 L7.030,-0.000 C7.030,-0.000 29.000,-0.875 33.394,15.750 C37.788,32.375 39.106,41.562 47.455,45.500 C55.803,49.437 58.000,49.000 58.000,49.000 L-127.000,49.000 L-127.000,-0.000 Z" Stretch="Fill" Width="185"/>
                        <Label Name="Label"
                               Foreground="#494c58"
                               Padding="0,0,20,0"
                               FontSize="16"
                               VerticalAlignment="Stretch"
                               VerticalContentAlignment="Center"
                               HorizontalAlignment="Stretch"
                               HorizontalContentAlignment="Center"
                               Content="{resources:Loc Sidebar_Countries_ttl}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Label" Property="Foreground" Value="White"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding DataContext.Tab, RelativeSource={RelativeSource AncestorType=UserControl, Mode=FindAncestor}, Converter={StaticResource DataTypeConverter}}" Value="{x:Type sidebar:CountriesViewModel}">
                            <Setter TargetName="Path" Property="Fill" Value="#34343d"/>
                            <Setter TargetName="Label" Property="Foreground" Value="White"/>
                            <Setter  Property="Panel.ZIndex" Value="1"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ProfilesTabButton" TargetType="Button" BasedOn="{StaticResource SidebarTabButton}">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Path Name="Path" Fill="#24242b" HorizontalAlignment="Left" Data="M58.000,-0.000 L50.970,-0.000 C50.970,-0.000 29.000,-0.875 24.606,15.750 C20.212,32.375 18.894,41.562 10.545,45.500 C2.197,49.437 -0.000,49.000 -0.000,49.000 L185.000,49.000 L185.000,-0.000 Z" Stretch="Fill"/>
                        <Label Name="Label" Margin="6,0,0,0" Foreground="#494c58" HorizontalContentAlignment="Center" VerticalAlignment="Stretch" VerticalContentAlignment="Center" FontSize="16" Content="{resources:Loc Sidebar_Profiles_ttl}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Label" Property="Foreground" Value="White"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding DataContext.Tab, RelativeSource={RelativeSource AncestorType=UserControl, Mode=FindAncestor}, Converter={StaticResource DataTypeConverter}}" Value="{x:Type sidebar:SidebarProfilesViewModel}">
                            <Setter TargetName="Path" Property="Fill" Value="#34343d"/>
                            <Setter TargetName="Label" Property="Foreground" Value="White"/>
                            <Setter Property="Panel.ZIndex" Value="1"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ServerFeature" TargetType="Border">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
    </Style>
    <Style x:Key="CountryFeature" BasedOn="{StaticResource ServerFeature}" TargetType="Border">
        <Setter Property="Width" Value="26"/>
        <Setter Property="Height" Value="26"/>
        <Setter Property="BorderBrush" Value="#4c4c59"/>
        <Setter Property="CornerRadius" Value="13"/>
    </Style>
</ResourceDictionary>
