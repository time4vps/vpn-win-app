<!--
Copyright (c) 2020 Time4VPS

This file is part of T4VPN.

T4VPN is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

T4VPN is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with T4VPN.  If not, see <https://www.gnu.org/licenses/>.
-->

<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:fa="http://schemas.fontawesome.io/icons/"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:profiles="clr-namespace:T4VPN.Core.Profiles;assembly=T4VPN.Core">

    <SolidColorBrush x:Key="Button.Static.Background" Color="Transparent"/>
    <SolidColorBrush x:Key="Button.Static.Border" Color="White"/>
    <SolidColorBrush x:Key="Button.Static.Foreground" Color="White"/>
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="White"/>
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="Transparent"/>
    <SolidColorBrush x:Key="Button.MouseOver.Foreground" Color="#222328"/>
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="Transparent"/>
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#4B4B56"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#4B4B56"/>

    <Style x:Key="UpgradeRequiredText" TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding UpgradeRequired}" Value="True">
                <Setter Property="Foreground" Value="Gray"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ProfileFormPlaceholder" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#5f6172"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="IsHitTestVisible" Value="False"/>
        <Setter Property="Visibility" Value="Hidden"/>
    </Style>
    <Style x:Key="ButtonsContainer" TargetType="DockPanel">
        <Setter Property="Height" Value="66"/>
        <Setter Property="Background" Value="{StaticResource ModalBarColor}"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
    </Style>
    <Style x:Key="ErrorsPanel" TargetType="Grid">
        <Setter Property="MinHeight" Value="55"/>
        <Setter Property="Background" Value="#9d9d9d"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Margin" Value="0,0,0,66"/>
    </Style>
    <Style x:Key="ServerTypeButton" TargetType="Button" BasedOn="{StaticResource PrimaryModalButton}">
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Value="False">
                        <Condition.Binding>
                            <MultiBinding Converter="{StaticResource MultiValueEqualityConverter}">
                                <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}" Path="DataContext.ServerType" Mode="OneWay"/>
                                <Binding RelativeSource="{RelativeSource Self}" Path="DataContext" Mode="OneWay"/>
                            </MultiBinding>
                        </Condition.Binding>
                    </Condition>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Value="False">
                        <Condition.Binding>
                            <MultiBinding Converter="{StaticResource MultiValueEqualityConverter}">
                                <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}" Path="DataContext.ServerType" Mode="OneWay"/>
                                <Binding RelativeSource="{RelativeSource Self}" Path="DataContext" Mode="OneWay"/>
                            </MultiBinding>
                        </Condition.Binding>
                    </Condition>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource Button.Disabled.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource Button.Disabled.Border}"/>
                <Setter Property="Foreground" Value="{StaticResource Button.Disabled.Foreground}"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Value="False">
                        <Condition.Binding>
                            <MultiBinding Converter="{StaticResource MultiValueEqualityConverter}">
                                <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}" Path="DataContext.ServerType" Mode="OneWay"/>
                                <Binding RelativeSource="{RelativeSource Self}" Path="DataContext" Mode="OneWay"/>
                            </MultiBinding>
                        </Condition.Binding>
                    </Condition>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Border.BorderBrush" Value="{StaticResource Button.MouseOver.Border}"/>
                <Setter Property="Background" Value="{StaticResource Button.MouseOver.Background}"/>
                <Setter Property="Foreground" Value="{StaticResource Button.MouseOver.Foreground}"/>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="ProfileSyncStatusImage" DataType="{x:Type profiles:ProfileSyncStatus}">
        <Border x:Name="Border" Width="16" Height="16" CornerRadius="8">
            <fa:FontAwesome x:Name="Image" VerticalAlignment="Center" HorizontalAlignment="Center"
                            Icon="Refresh" FontWeight="Medium" FontSize="12"
                            Foreground="Black"/>
        </Border>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding}" Value="{x:Static profiles:ProfileSyncStatus.InProgress}">
                <Setter Property="Background" TargetName="Border" Value="White"/>
                <Setter Property="Icon" TargetName="Image" Value="Refresh"/>
                <Setter Property="Spin" TargetName="Image" Value="True"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding}" Value="{x:Static profiles:ProfileSyncStatus.Succeeded}">
                <Setter Property="Background" TargetName="Border" Value="{StaticResource PrimaryColor}"/>
                <Setter Property="Icon" TargetName="Image" Value="Check"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding}" Value="{x:Static profiles:ProfileSyncStatus.Failed}">
                <Setter Property="Background" TargetName="Border" Value="{StaticResource RedColor}"/>
                <Setter Property="Icon" TargetName="Image" Value="Exclamation"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding}" Value="{x:Static profiles:ProfileSyncStatus.Overridden}">
                <Setter Property="Background" TargetName="Border" Value="{StaticResource WarningColor}"/>
                <Setter Property="Icon" TargetName="Image" Value="Info"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
</ResourceDictionary>
