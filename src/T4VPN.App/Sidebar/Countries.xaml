<!--
Copyright (c) 2020 Time4VPS

This file is part of T4VPN.

T4VPN is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

T4VPN is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with T4VPN.  If not, see <https://www.gnu.org/licenses/>.
-->

<UserControl x:Class="T4VPN.Sidebar.Countries"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:controls="clr-namespace:T4VPN.Views.Controls"
             xmlns:servers="clr-namespace:T4VPN.Servers"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:c="clr-namespace:CalcBinding;assembly=CalcBinding"
             xmlns:fa="http://schemas.fontawesome.io/icons/"
             xmlns:icons="clr-namespace:T4VPN.Views.Icons"
             xmlns:sidebar="clr-namespace:T4VPN.Sidebar"
             xmlns:resources="clr-namespace:T4VPN.Resources"
             xmlns:wpf="clr-namespace:T4VPN.Core.Wpf"
             xmlns:onboarding="clr-namespace:T4VPN.Onboarding"
             mc:Ignorable="d"
             d:DesignHeight="300"
             d:DesignWidth="300"
             d:DataContext="{d:DesignInstance sidebar:CountriesViewModel}">

    <UserControl.Resources>
        <Style x:Key="ServerRowItem" TargetType="Grid">
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="MinHeight" Value="48"/>
            <Setter Property="Background" Value="{StaticResource SidebarTabBackgroundColor}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding ConnectedToCountry}" Value="True">
                    <Setter Property="Background" Value="#2f2f37"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ServerFlagImage" TargetType="Image">
            <Setter Property="Width" Value="21"/>
            <Setter Property="Height" Value="15"/>
            <Setter Property="Visibility" Value="Collapsed"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.SecureCore}" Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="LoadBubbleLeft" TargetType="UserControl">
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0,0,12,0"/>
            <Setter Property="Width" Value="21"/>
        </Style>
        <Style x:Key="UpgradeRequiredLabel" TargetType="Label">
            <Setter Property="Margin" Value="5,0,0,0"/>
            <Setter Property="Visibility" Value="Hidden"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="Foreground" Value="#797984"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="DemiBold"/>
            <Setter Property="Padding" Value="0,5"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding UpgradeRequired}" Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListViewItem}}, Path=IsMouseOver}" Value="True">
                    <Setter Property="Visibility" Value="Hidden"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Server.Status}" Value="0">
                    <Setter Property="Visibility" Value="Hidden"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ServerRowStackPanel" TargetType="StackPanel">
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Orientation" Value="Horizontal"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.SecureCore}" Value="False">
                    <Setter Property="Margin" Value="32,0,0,0"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ToggleButtonArrow" TargetType="fa:FontAwesome">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Foreground" Value="#4B4B56"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Icon" Value="ChevronDown"/>
        </Style>
        <Style x:Key="OutterToggleBorder" TargetType="Border">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="CornerRadius" Value="13"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="BorderBrush" Value="#4B4B56"/>
            <Setter Property="Width" Value="26"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Height" Value="26"/>
            <Setter Property="Background" Value="Transparent"/>
        </Style>
        <Style x:Key="InnerToggleBorder" TargetType="Border">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="CornerRadius" Value="13"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Margin" Value="-1"/>
        </Style>
        <Style x:Key="ToggleButton" TargetType="Button">
            <Setter Property="Padding" Value="5"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseLeftButtonDown">
                                    <i:InvokeCommandAction
                                        Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=DataContext.Expand}" 
                                        CommandParameter="{Binding}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <Border x:Name="OutterToggleBorder" Style="{StaticResource OutterToggleBorder}">
                                <Border x:Name="InnerToggleBorder" Style="{StaticResource InnerToggleBorder}"/>
                            </Border>
                            <fa:FontAwesome x:Name="Arrow" Style="{StaticResource ToggleButtonArrow}"/>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding Expanded}" Value="True">
                                <Setter TargetName="Arrow" Property="Icon" Value="ChevronUp"/>
                                <Setter TargetName="Arrow" Property="Margin" Value="0.5,-0.5,0,2"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Expanded}" Value="False">
                                <Setter TargetName="Arrow" Property="Margin" Value="0.5,1,0,2"/>
                            </DataTrigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Arrow" Property="Foreground" Value="White"/>
                                <Setter TargetName="InnerToggleBorder" Property="Background" Value="{StaticResource PrimaryColor}"/>
                                <Setter TargetName="OutterToggleBorder" Property="BorderBrush" Value="{StaticResource PrimaryColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SearchPlaceholder" TargetType="TextBlock">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Foreground" Value="{StaticResource GrayColor}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Margin" Value="59,0,0,0"/>
            <Setter Property="IsHitTestVisible" Value="False"/>
            <Setter Property="Text" Value="{resources:Loc Sidebar_Countries_lbl_Search_Watermark}"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Visibility" Value="Collapsed"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Text, ElementName=SearchInput}" Value="">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsFocused, ElementName=SearchInput}" Value="True">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="SearchInput" TargetType="TextBox">
            <Setter Property="Height" Value="48"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Foreground" Value="{StaticResource GrayColor}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Margin" Value="59,0,30,0"/>
            <Setter Property="CaretBrush" Value="{StaticResource GrayColor}"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Text" Value="{Binding SearchValue, UpdateSourceTrigger=PropertyChanged}"/>
        </Style>
        <Style x:Key="SecureCoreLabel" TargetType="Label">
            <Setter Property="Foreground" Value="{StaticResource GrayColor}"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Margin" Value="5,0,0,0"/>
            <Setter Property="Padding" Value="5,0,0,2"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding SecureCore}" Value="True">
                    <Setter Property="Foreground" Value="White"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ServerFeatures" TargetType="sidebar:ServerFeatures">
            <Setter Property="Visibility" Value="Visible"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.SecureCore}" Value="True">
                    <Setter Property="Visibility" Value="Hidden"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="City" TargetType="Label">
            <Setter Property="Foreground" Value="#797984"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="Margin" Value="0,0,0,3"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListViewItem}}, Path=IsMouseOver}" Value="True">
                    <Setter Property="Visibility" Value="Hidden"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Connected}" Value="True">
                    <Setter Property="Visibility" Value="Hidden"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding UpgradeRequired}" Value="True">
                    <Setter Property="Visibility" Value="Hidden"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Server.Status}" Value="0">
                    <Setter Property="Visibility" Value="Hidden"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding ShowIp}" Value="False">
                    <Setter Property="Visibility" Value="Hidden"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="MaintenanceIcon" TargetType="fa:FontAwesome">
            <Setter Property="Margin" Value="0,0,4,0"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="FontSize" Value="22"/>
            <Setter Property="Foreground" Value="#98989d"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Visibility" Value="Hidden"/>
            <Setter Property="Icon" Value="Wrench"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Server.Status}" Value="0">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="CountriesListView" TargetType="ListView">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListView">
                        <ScrollViewer PanningMode="VerticalOnly" Template="{StaticResource DarkScrollViewerControlTemplate}">
                            <ItemsPresenter/>
                        </ScrollViewer>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SecureCoreExitCountry" TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Padding" Value="0,0,0,2"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Foreground" Value="White"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Dimmed}" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource GrayColor}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="CountryRow" TargetType="Border">
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="BorderBrush" Value="{StaticResource SidebarBorderColor}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="MinHeight" Value="48"/>
            <Setter Property="Background" Value="{StaticResource SidebarTabBackgroundColor}"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
        </Style>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Border Grid.Row="0" BorderThickness="0,0,0,1" BorderBrush="#3b3b43" Padding="0,15" Visibility="Collapsed">
            <StackPanel Margin="27,0,0,0" Orientation="Horizontal">
                <CheckBox x:Name="SecureCoreSwitch"
                          IsChecked="{Binding SecureCore}"
                          Command="{Binding ToggleSecureCoreCommand}"
                          FocusVisualStyle="{x:Null}"
                          HorizontalAlignment="Right"
                          AutomationProperties.AutomationId="{StaticResource SecureCoreCheckbox}"
                          Style="{StaticResource ToggleSwitch}"/>
                <Label Style="{StaticResource SecureCoreLabel}" Content="{resources:Loc Sidebar_Countries_lbl_SecureCore}"/>
                <fa:FontAwesome
                    Icon="InfoCircle"
                    Padding="9,4,0,0"
                    ToolTip="{resources:Loc Sidebar_Countries_lbl_SecureCore_Info}"
                    Foreground="{StaticResource PrimaryColor}"
                    FontSize="16"/>
            </StackPanel>
        </Border>
        <onboarding:Step Number="4"
                       Grid.Row="0"
                       HorizontalAlignment="Right"
                       Margin="0,0,80,0">
            <onboarding:Step.Style>
                <Style TargetType="onboarding:Step">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ShowFifthOnboardingStep}" Value="True">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </onboarding:Step.Style>
        </onboarding:Step>
        <Grid Grid.Row="1" Visibility="{c:Binding '!SecureCore'}">
            <Border BorderBrush="#3b3b43" BorderThickness="0,0,0,1"/>
            <fa:FontAwesome Icon="Search"
                            FontSize="16"
                            VerticalAlignment="Center"
                            Foreground="{StaticResource GrayColor}"
                            HorizontalAlignment="Left"
                            Margin="30,0,0,0"/>
            <Grid>
                <TextBox Style="{StaticResource SearchInput}" x:Name="SearchInput"/>
                <TextBlock Style="{StaticResource SearchPlaceholder}"/>
                <Button Style="{StaticResource ClearStyleButton}"
                        Visibility="{Binding SearchNotEmpty, Converter={StaticResource BoolToVis}}"
                        HorizontalAlignment="Right"
                        Background="Transparent"
                        BorderThickness="0"
                        Margin="0,0,10,0"
                        Command="{Binding ClearSearchCommand}"
                        VerticalAlignment="Center">
                    <fa:FontAwesome Icon="Times"
                                    FontSize="16"
                                    Cursor="Hand"
                                    Foreground="{StaticResource GrayColor}"/>
                </Button>

            </Grid>
        </Grid>

        <wpf:CustomListView x:Name="ListView"
                  BorderThickness="0"
                  Grid.Row="2"
                  Background="Transparent"
                  Padding="0"
                  Style="{StaticResource CountriesListView}"
                  ItemsSource="{Binding Items, UpdateSourceTrigger=PropertyChanged}"
                  VirtualizingPanel.ScrollUnit="Pixel"
                  VirtualizingPanel.IsVirtualizing="True"
                  VirtualizingPanel.VirtualizationMode="Standard"
                  ScrollViewer.CanContentScroll="True"
                  ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                  ScrollViewer.PanningMode="VerticalOnly">
            <wpf:CustomListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListViewItem">
                                <Border x:Name="Border" Style="{StaticResource CountryRow}">
                                    <ContentPresenter/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <DataTrigger Binding="{Binding Converter={StaticResource DataTypeConverter}}" Value="{x:Type servers:ServersByCountryViewModel}">
                                        <Setter TargetName="Border" Property="BorderThickness" Value="0,1,0,0"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Converter={StaticResource DataTypeConverter}}" Value="{x:Type servers:ServersByExitNodeViewModel}">
                                        <Setter TargetName="Border" Property="BorderThickness" Value="0,1,0,0"/>
                                    </DataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Connected}" Value="True"/>
                                            <Condition Binding="{Binding Converter={StaticResource DataTypeConverter}}" Value="{x:Type servers:ServersByCountryViewModel}"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="Border" Property="Background" Value="#2f2f37"/>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Connected}" Value="True"/>
                                            <Condition Binding="{Binding Converter={StaticResource DataTypeConverter}}" Value="{x:Type servers:ServersByExitNodeViewModel}"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="Border" Property="Background" Value="#2f2f37"/>
                                    </MultiDataTrigger>
                                    <DataTrigger Binding="{Binding Path=(wpf:CustomListView.ItemIndex), RelativeSource={RelativeSource Self}}" Value="0">
                                        <Setter TargetName="Border" Property="BorderThickness" Value="0"/>
                                    </DataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </wpf:CustomListView.ItemContainerStyle>
            <ItemsControl.Resources>
                <DataTemplate x:Key="BaseTemplate" DataType="{x:Type servers:ServersByCountryViewModel}">
                    <Border x:Name="Border" Background="Transparent">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseLeftButtonDown">
                                <i:InvokeCommandAction
                                        Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=DataContext.Expand}" 
                                        CommandParameter="{Binding}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Grid MinHeight="48" Margin="27,0">
                            <Image HorizontalAlignment="Left"
                                   VerticalAlignment="Center"
                                   Source="{Binding CountryCode, Converter={StaticResource CountryToFlagConverter}}" Width="21" Height="15"/>
                            <Grid Width="220">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Grid.Column="0"
                                           Text="{Binding Name}"
                                           ToolTip="{Binding Name}"
                                           HorizontalAlignment="Left"
                                           VerticalAlignment="Center"
                                           Padding="0,0,0,2"
                                           TextTrimming="CharacterEllipsis"
                                           FontSize="16">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Foreground" Value="White"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Dimmed}" Value="True">
                                                    <Setter Property="Foreground" Value="{StaticResource GrayColor}"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>

                                <StackPanel Orientation="Horizontal" Grid.Column="1">
                                    <Border Style="{StaticResource CountryFeature}"
                                            ToolTip="{resources:Loc Sidebar_Countries_info_Tor}"
                                            Visibility="{Binding Tor, Converter={StaticResource BoolToVis}}">
                                        <icons:Tor Foreground="#98989d"
                                                   VerticalAlignment="Center"
                                                   HorizontalAlignment="Center"
                                                   Width="12"
                                                   Height="18"/>
                                    </Border>

                                    <Border Style="{StaticResource CountryFeature}"
                                            ToolTip="{resources:Loc Sidebar_Countries_info_P2P}"
                                            Visibility="{Binding P2P, Converter={StaticResource BoolToVis}}">
                                        <icons:P2P Foreground="#98989d"
                                                   VerticalAlignment="Center"
                                                   HorizontalAlignment="Center"
                                                   Width="18"
                                                   Height="14"/>
                                    </Border>
                                </StackPanel>

                                <Button Grid.Column="2"
                                        Style="{StaticResource SidebarCountryConnectButton}"
                                        Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=DataContext.ConnectCountry}"
                                        CommandParameter="{Binding}"/>
                            </Grid>

                            <Button Style="{StaticResource ToggleButton}"/>
                        </Grid>
                    </Border>
                </DataTemplate>
                <DataTemplate DataType="{x:Type servers:ServersByExitNodeViewModel}">
                    <Border x:Name="Border" Background="Transparent">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseLeftButtonDown">
                                <i:InvokeCommandAction
                                        Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=DataContext.Expand}"
                                        CommandParameter="{Binding}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Grid MinHeight="48" Margin="27,0">
                            <StackPanel Orientation="Horizontal">
                                <Image HorizontalAlignment="Left" VerticalAlignment="Center" Source="{Binding CountryCode, Converter={StaticResource CountryToFlagConverter}}" Width="21" Height="15"/>
                                <Label Content="»" Margin="5,3,0,0" FontSize="20" Foreground="{StaticResource PrimaryColor}"/>
                            </StackPanel>
                            <Grid Width="200" Margin="50,0,0,0" HorizontalAlignment="Left">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0"
                                           x:Name="CountryLabel"
                                           Text="{Binding Name}"
                                           Style="{StaticResource SecureCoreExitCountry}"
                                           TextTrimming="CharacterEllipsis"/>
                                <Button Grid.Column="1"
                                        Style="{StaticResource SidebarCountryConnectButton}"
                                        Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=DataContext.ConnectCountry}"
                                        CommandParameter="{Binding}"/>
                            </Grid>
                            <Button Style="{StaticResource ToggleButton}"/>
                        </Grid>
                    </Border>
                </DataTemplate>
                <DataTemplate DataType="{x:Type servers:ServerItemViewModel}">
                    <Grid Style="{StaticResource ServerRowItem}">
                        <Grid Margin="27,0">
                            <controls:LoadBubble Margin="-2,0,0,0" Width="32" Height="32" DataContext="{Binding ConnectionInfoViewModel}" Style="{StaticResource LoadBubbleLeft}"/>
                            <StackPanel Style="{StaticResource ServerRowStackPanel}">
                                <controls:ServerName ConnectionName="{Binding ConnectionName}" Margin="0,-3,0,0" FontSize="16"/>
                                <sidebar:ServerFeatures Features="{Binding Features}" Style="{StaticResource ServerFeatures}" Visibility="Collapsed"/>
                            </StackPanel>
                            <Label Style="{StaticResource City}" FontSize="14" FontWeight="Normal" Content="{Binding Server.City}"/>
                            <Label Style="{StaticResource UpgradeRequiredLabel}" Content="{resources:Loc Servers_lbl_Upgrade}"/>
                            <Button
                                    Margin="38,0,0,0"
                                    Style="{StaticResource SidebarServerConnectButton}"
                                    Command="{Binding DataContext.Connect, RelativeSource={RelativeSource AncestorType=ListView}}"
                                    CommandParameter="{Binding}"/>
                            <fa:FontAwesome Style="{StaticResource MaintenanceIcon}" ToolTip="{resources:Loc Sidebar_Countries_lbl_Maintenance}"/>
                        </Grid>
                    </Grid>
                </DataTemplate>
                <DataTemplate DataType="{x:Type servers:SecureCoreItemViewModel}">
                    <Grid Style="{StaticResource ServerRowItem}">
                        <Grid Margin="27,0">
                            <controls:LoadBubble Margin="-2,0,0,0" Width="32" Height="32" DataContext="{Binding ConnectionInfoViewModel}" Style="{StaticResource LoadBubbleLeft}"/>
                            <Image Margin="33,0,10,0"
                                   HorizontalAlignment="Left"
                                   Source="{Binding Path=Server.EntryCountry, Converter={StaticResource CountryToFlagConverter}, Mode=OneWay}"
                                   Style="{StaticResource ServerFlagImage}"/>
                            <Grid Width="220" Margin="60,0,0,0" HorizontalAlignment="Left">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Grid.Column="0" Style="{StaticResource ServerName}" Margin="0,-5,0,0" FontSize="16" TextTrimming="CharacterEllipsis">
                                    <Run Text="{resources:Loc Servers_lbl_ViaCountry}"/>
                                    <Run Text="{Binding Server.EntryCountry, Converter={StaticResource CountryCodeToNameConverter}, Mode=OneWay}">
                                        <Run.Style>
                                            <Style TargetType="Run">
                                                <Setter Property="Foreground" Value="White"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding UpgradeRequired}" Value="True">
                                                        <Setter Property="Foreground" Value="Gray"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Run.Style>
                                    </Run>
                                    <Run Text="»" FontSize="20" Foreground="{StaticResource PrimaryColor}"/>
                                </TextBlock>

                                <Button Grid.Column="1"
                                        Style="{StaticResource SidebarServerConnectButton}"
                                        Command="{Binding DataContext.Connect, RelativeSource={RelativeSource AncestorType=ListView}}"
                                        CommandParameter="{Binding}"/>
                            </Grid>
                            <fa:FontAwesome Style="{StaticResource MaintenanceIcon}" ToolTip="{resources:Loc Sidebar_Countries_lbl_Maintenance}"/>
                            <Label Style="{StaticResource UpgradeRequiredLabel}" Content="{resources:Loc Servers_lbl_Upgrade}"/>
                        </Grid>
                    </Grid>
                </DataTemplate>
                <DataTemplate DataType="{x:Type servers:ServersByCountryViewModel}">
                    <ContentPresenter ContentTemplate="{StaticResource BaseTemplate}" />
                </DataTemplate>
            </ItemsControl.Resources>
        </wpf:CustomListView>
    </Grid>
</UserControl>
