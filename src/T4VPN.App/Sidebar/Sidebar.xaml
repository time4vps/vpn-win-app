<!--
Copyright (c) 2020 Time4VPS

This file is part of T4VPN.

T4VPN is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

T4VPN is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with T4VPN.  If not, see <https://www.gnu.org/licenses/>.
-->

<UserControl x:Class="T4VPN.Sidebar.Sidebar"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:sidebar="clr-namespace:T4VPN.Sidebar"
             xmlns:trial="clr-namespace:T4VPN.Sidebar.Trial"
             xmlns:onboarding="clr-namespace:T4VPN.Onboarding"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance sidebar:SidebarViewModel}">

    <UserControl.Resources>
        <Style x:Key="SidebarGrid" TargetType="Grid">
            <Setter Property="Margin" Value="0,-49,0,0"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding FlashNotification.Notifications.Count, Converter={StaticResource ZeroToBoolConverter}}" Value="False">
                    <Setter Property="Margin" Value="0,-49,0,45"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <Grid Background="#202128" Panel.ZIndex="2" HorizontalAlignment="Left" Width="336">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Button Style="{StaticResource SidebarModeButton}">
            <Button.RenderTransform>
                <TransformGroup>
                    <ScaleTransform ScaleX="-1"/>
                </TransformGroup>
            </Button.RenderTransform>
        </Button>

        <StackPanel HorizontalAlignment="Center" Grid.Row="0">
            <trial:TrialView Visibility="{Binding ShowTrialView, Converter={StaticResource BoolToVis}}"/>
            <sidebar:ConnectionStatus DataContext="{Binding ConnectionStatus}"/>
        </StackPanel>

        <Grid Grid.Row="1" Style="{StaticResource SidebarGrid}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Button Grid.Row="0"
                    Style="{StaticResource CountriesTabButton}"
                    Command="{Binding CountriesTabCommand}"
                    AutomationProperties.AutomationId="{StaticResource SidebarCountriesButton}"/>
            <onboarding:Step Number="3"
                           Grid.Row="0"
                           Panel.ZIndex="1"
                           HorizontalAlignment="Left"
                           Visibility="{Binding ShowThirdOnboardingStep, Converter={StaticResource BoolToVis}}"/>
            <Button Grid.Row="0"
                    Style="{StaticResource ProfilesTabButton}"
                    Command="{Binding ProfilesTabCommand}"
                    AutomationProperties.AutomationId="{StaticResource SidebarProfilesButton}"/>
            <onboarding:Step Number="2"
                           Grid.Row="0"
                           Panel.ZIndex="1"
                           HorizontalAlignment="Right"
                           Visibility="{Binding ShowSecondOnboardingStep, Converter={StaticResource BoolToVis}}"/>
            <Grid Grid.Row="1" Background="{StaticResource SidebarTabBackgroundColor}">
                <ContentControl Content="{Binding Tab}">
                    <ContentControl.Resources>
                        <DataTemplate DataType="{x:Type sidebar:CountriesViewModel}">
                            <sidebar:Countries DataContext="{Binding DataContext.Countries, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"/>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type sidebar:SidebarProfilesViewModel}">
                            <sidebar:SidebarProfiles DataContext="{Binding DataContext.Profiles, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"/>
                        </DataTemplate>
                    </ContentControl.Resources>
                </ContentControl>
            </Grid>
        </Grid>
    </Grid>
</UserControl>
